syntax = "proto3";

package greet;

// The greeting service definition.
service Communication {
	
	rpc SubmitReport (ReportMessage) returns (ServerMessage); // Envia un reporte al servidor 
	rpc BidirectionalCommunication (stream ClientMessage) returns (stream ServerMessage); // Comunicacion bidireccional entre cliente y servidor
  rpc IndicatorReport (IndicatorMessage) returns (ServerMessage); // Envia un reporte de indicador al servidor
  rpc SaveIndicatorReport (ReportXIndicator) returns (ServerMessage); // Envia ids para relacionar
  rpc ServerComprobationMD5 (ComprobationMD5) returns (ServerMessage); // Envia un md5 para comprobar si existe en la base de datos
  // PARTE MIA
  rpc ClientPetition (ClientRequest) returns (ServerMessage); // Envia una peticion al servidor para obtener informacion
  rpc StreamingServerIndicator (stream IndicatorMessage) returns (ClientMessage); // Envia los indicadores detectados de parte del servidor a la app de terceros 
  rpc StreamingServerReport (stream ReportMessage) returns (ClientMessage); // Envia los reportes recibidos de parte del servidor a la app de terceros
  rpc IndicatorRequest (SpecificRequest) returns (stream IndicatorMessage); // Envia un indicador para obtener informacion
  rpc ReportRequest (SpecificRequest) returns (stream ReportMessage); // Envia un reporte para obtener informacion
}

// The request message containing the user's name.
message ClientMessage{
  string ip = 1; // IP del host que envia el mensaje
  string message = 2; // Mensaje a enviar
}

// The response message containing the greetings.
message ServerMessage {
  string message = 1; // Mensaje a enviar
}

message ReportMessage {
  string ip = 1; // IP del host que envia el reporte
	string json = 2; // Reporte en formato JSON
}

message IndicatorMessage {
  string ip = 1; // IP del host donde se detecto el indicador
  string timestamp = 2; // Timestamp de la deteccion
  string indicator = 3; // Indicador detectado
  string detector = 4; // Detector del indicador
}

message ReportXIndicator{
  string idReport = 1; // ID del reporte
  string idIndicator = 2; // ID del indicador
}

message ComprobationMD5{
  string md5 = 1; // MD5 del programa
}

message SpecificRequest{
  string start = 1; // Timestamp de inicio
  string end = 2; // Timestamp de fin
  string ip = 3; // IP del host
}

message ClientRequest{
  int type = 1; // Tipo de peticion de parte de terceros
}
